[[Fichier:4198.JPG|400px|border]][[Fichier:IMG_4193.JPG|400px|border]]


<center>'''<big><big>Robot détecteur d'obstacles</big></big>'''</center>


= VoLAB =
[[Fichier:Volab.JPG]]

= Assocation VoRoBoTics =
Date : 23/01/2016

Auteur : Lecorsier

Relecteur : 

Thème : Domotique

Projet : Robot détecteur d'obstacles, programmation Arduino et ArduBlock

= Problématique =
J'ai repris le [http://www.a4.fr/automatisme-et-robotique/automatisme-et-robots-avec-picaxe/technologie-picaxe/robotribu/kit-robopilot-equipe-avec-carte-motopilot-axe023.html RobotPilot développé et vendu par A4], concepteur et fabricant de matériel pédagogique.

Je décris mon expérience sur ce robot avec la technologie PICAXE sur le [http://lecorsiergilles.blogspot.fr/ blog La Technologie au Collège] dans le [http://lecorsiergilles.blogspot.fr/2011/06/automatisme-et-robotique-picaxe-ter.html message Automatismes et robotique].

Dans ce document sont abordés :

Les cartes Arduino Mega 2560 et adafruit motor shield

Les branchements des capteurs et actionneurs

Les moteurs CC et les branchements

La programmation à  l'aide d'ArduBlock, plugin (module d'extension) du logiciel Arduino de&nbsp;:

La commande «&nbsp;Tant que ...» (while)

La boucle «Si» (if)

Sous programme

= Matériel =
La maquette proposée n'est qu'un support et le travail peut très bien être transféré sur un autre projet.

== Cartes  ==
[http://www.mon-club-elec.fr/pmwiki_reference_arduino/pmwiki.php?n=Main.MaterielMega2560 La carte Arduino Mega 2560] est une carte à  microcontrôleur basée sur un ATmega2560 ([http://www.atmel.com/Images/doc2549.pdf fiche technique]).

[[Image:ArduinoMega2560Front240.jpg|thumb|center]]

[https://learn.adafruit.com/downloads/pdf/adafruit-motor-shield.pdf La carte afruit motor shield] est une carte d'extension de commande de moteurs

[[Fichier:L293Dmotorshield.jpg|vignette|center]]

== Logiciel ==
Le logiciel Arduino installé (voir : http://www.arduino.cc/)

[http://www.semageek.com/arduino-presentation-et-traduction-en-francais-de-ardublock/ Ardublock] est un plugin qui s'ajoute à  l'ide d'arduino. (Programmation graphique), à placer dans C:\Users\nom_du_compte\Documents\Arduino\Tools\ArduBlockTool\Tool

La librairie [https://learn.adafruit.com/adafruit-motor-shield-v2-for-arduino/install-software adafruit motor shield] (même si elle apparait dans Ardublock), à  placer dans C:\Users\nom_du_compte\Documents\Arduino\libraries

== Information (Attention au câblage présenté plus tard) ==
Microrupteur (fin de course) normalement ouvert

== Actionneurs ==
Deux moteurs D21mm - Arbre 2mm de 1,5V à  4,5V: Caractéristiques sous 3 V : - 10500 tr/mn à  vide, 250 mA, Couple : 11 g.cm

= Préparation =
== Câblage des microrupteurs ==
Une résistance de rappel («pull-up» ou «pull-down») permet de fixer une entrée numérique à  un état HIGH (haut ou 1) ou LOW (bas ou 0).

Attention car j'ai câblé les capteurs "pull-up". Faites bien attention et choisissez plutôt le câblage en "pull-up" afin d'être en sécurité si un court circuit vous arrive (la résistance se trouve toujours entre le VCC et le GND) et de ne pas griller l'alimentation.

[[Image:pullups.png]]Avec la résistance de rappel "pull-down", l'entrée numérique est à  l'état LOW lorsque le micro-rupteur ou le bouton poussoir sont ouverts (relâchés).

Avec la résistance de rappel "pull-up", l'entrée numérique est à  l'état HIGH lorsque le micro-rupteur ou le bouton poussoir sont ouverts (relâchés).

Cette information est importante car votre programme ne fonctionnera pas si vous mélangez les câblages comme j'ai pu le faire et perdre un temps important pour trouver l'erreur.

== Montage de la carte Arduino Mega 2560 et la carte d'extension adafruit motor shield  ==
[[Image:megaloupe5reperage.jpg|border|center|500px]]
J'utilise une batterie Litium 7,4V afin d'alimenter l'Arduino et les deux moteurs par l'alimentation extérieur en par un convertisseur de tension 5V.
[[Image:Ubec.jpeg|border|center|150px]]

== Repérage des branchements ==
1) Capteurs

AVG : Avant Gauche : pin 25

AVD : Avant Droit : pin 24

ARG : Arrière Gauche : pin 23

ARD: Arriére Droit : pin 22

2) Moteurs

Moteur droit : M2

Moteur gauche : M1

3) Protection de la carte

Pont de diode afin d'éviter les retours de courant sur la carte lors de l'arrêt brutal des moteurs ou de l'inversion de rotation.

'''Schéma structurel :'''
[[Image:schemastruc.PNG|border|center|500px]]
'''Carte :'''


[[Fichier:IMG_4240.JPG|400px|border]][[Fichier:IMG_4237.JPG|400px|border]]

= Programmation =

== La manipulation des ports à  l'aide des registres de port ==
La carte Arduino Mega est basée sur un microcontrôleur AVR Atmel. 

Pour contrôler l'état des capteurs, j'utilise les registres de port qui permet de ne pas utiliser les fonctions «digitalRead» et «digitalWrite» pour chaque capteur.

Les registres de port permettent une manipulation de bas-niveau (çàd au niveau du matériel lui-même) et plus rapide des broches d'entrée/sortie du microcontrôleur de la carte Arduino Atmega2560 :

Le registre (un octet) DDR détermine le sens d'utilisation des broches numériques en tant qu'ENTREE ou SORTIE. 

le registre PORT contrôle le niveau HAUT ou BAS des broches numériques en SORTIE (et l'activation du PULLUP pour les broches en ENTREE).


le registre PIN reflète l'état des broches configurées en ENTREE.
[[Fichier:Registrepin.jpeg|400px|border]]

== Correspondance du registre et des actions attendues ==
Ce tableau permet de programmer le robot. Les actions attendues peuvent bien sur être modifiées.

[[Fichier:Correspondance reg.jpeg|850px|border|center|]]


'''Capteurs :''' 

AVG : Avant Gauche

AVD : Avant Droit

ARG : Arrière Gauche

ARD : Arrière Droit

'''Actionneurs :'''

Moteur droit : M2

Moteur gauche : M1

== Programme ArduBlock ==
Chargement du fichier créé avec Ardublock

1) Ouvrir le logiciel Arduino

2) Dans le menu outil, lancer le plugin Ardublock.

3) Ouvrir le fichier [http://www.vorobotics.com/uploads/GL/programmation%20robot.abp]


'''Description du programme'''

1) Initialisation (setup)

Contacts pull-up : capteur relâché, entrée en valeur 1.

DDRA : Fixe pins 1 en sortie, 0 en entrée (11110000)

Pin 22, 23, 24, 25 fixées en entrée.

Pin 26, 27, 28, 29 fixées en sortie (forcées pour éviter les perturbations)

[[Image:Init.jpeg]]




2) Contrôle de l'état des capteurs

La variable «capteur» prend la valeur décimale de l'état des contacts au moment «t».

[[Image:Lecture_capteur.jpeg]]

3) Déroulement du programme

Suivant la valeur «capteur», les actions diffèrent suivant le tableau «Correspondance du registre et des actions attendues»


[[Image:Reroule prog.jpeg]]

4) Le programme (boucle)

Le déplacement du robot est décrit en sous programmes.

[[Image:Sousavancer.jpeg]]

= Licence =
Ce document est mise à  disposition selon les termes de la&nbsp;[http://creativecommons.org/licenses/by/4.0/ Licence Creative Commons Attribution 4.0 International]. 

[[Image:]]Parternité 'by' :''L'oeuvre peut être librement utilisée, à  la condition de l'attribuer à  l'auteur en citant son nom.'' 


Note aux auteurs de documents du VoLAB, Vous avez la possibilité de changer de licence. Mais ce serait bien de rester libre et ouvert. Encore une fois ceci est une recommandation et non une obligation.

= Bibliographie =
= Webographie =
[http://fr.wikipedia.org/wiki/Licence_Creative_Commons http://fr.wikipedia.org/wiki/Licence_Creative_Commons]

[http://www.mon-club-elec.fr/pmwiki_reference_arduino/pmwiki.php?n=Main.PortManipulation http://www.mon-club-elec.fr/pmwiki_reference_arduino/pmwiki.php?n=Main.PortManipulation]

[http://damien-monni.fr/blog/article/arduino-et-les-bases-de-la-programmation-atmel-avr http://damien-monni.fr/blog/article/arduino-et-les-bases-de-la-programmation-atmel-avr]

[http://www.worldofgz.com/electronique/les-registres-de-port-arduino/ http://www.worldofgz.com/electronique/les-registres-de-port-arduino/]

[http://www.atmel.com/images/atmel-2549-8-bit-avr-microcontroller-atmega640-1280-1281-2560-2561_datasheet.pdf http://www.atmel.com/images/atmel-2549-8-bit-avr-microcontroller-atmega640-1280-1281-2560-2561_datasheet.pdf]

[http://www.atmel.com/images/atmel-2549-8-bit-avr-microcontroller-atmega640-1280-1281-2560-2561_datasheet.pdf http://www.atmel.com/images/atmel-2549-8-bit-avr-microcontroller-atmega640-1280-1281-2560-2561_datasheet.pdf]

[http://www.atmel.com/images/atmel-2549-8-bit-avr-microcontroller-atmega640-1280-1281-2560-2561_datasheet.pdf http://www.atmel.com/images/atmel-2549-8-bit-avr-microcontroller-atmega640-1280-1281-2560-2561_datasheet.pdf]


= Rédaction en langue française =
Partant du constat de terrain qu'une Ã©norme masse d'information concernant les sujets qui nous intéressent comme entre autres l'impression 3D n'étaient disponibles que dans la langue de Shakespeare et que de nombreuses personnes dans notre entourage ne maîtrisaient pas la dite langue et soucieux de diffuser encore plus l'information, nous avons pris le parti, au VoLAB, de rédiger nos documents de préférence en langue française.

= VoLAB =
Un mot sur le VoLAB. VoLAB est un fablab implanté à  environ 30km au nord-ouest de Paris dans la commune de Vauréal dans l'agglomération de Cergy Pontoise. Il est animé par l'association VoRoBoTics.

Site internet [http://www.vorobotics.com/ www.vorobotics.com]
